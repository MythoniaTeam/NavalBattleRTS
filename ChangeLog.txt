[Feature] 001.20220426: 创建Draw相关类 完善Vector Angle等数据类
---------------------------------------------------------------------------------------------------------------------------------
1. 添加了 [DrawManager] & [xxxPainter] 等类, 用于绘制相关功能.
2. 完善了 [MVector], [MAngle] 两类 的部分operator.
3. 将 [MVector] 的大部分代码复制到 [MVectorR].



[Feature] 002.20220427: 添加接口IMVector
---------------------------------------------------------------------------------------------------------------------------------
1. 添加了 [IMVector] 接口, 作为 MVector 和 MPosition 的共同接口.

-Change-
1. MVectorR 更名为 MPosition, 被正式使用.



[Feature] 003.20220428: 完成基础绘制功能, 完善Json资源管道
---------------------------------------------------------------------------------------------------------------------------------
1. 完善了 [MObject] 类.
   添加了 [Sprite] 等类, 实现基本的绘制功能.
   删除了 [xxxPainter] 等类. (Sprite 取代了它)
 ! [SpriteAnimated] 尚未测试.

2. 添加了 资源管道 相关的几个类, 	用于加载贴图的Json文件, 并转化为相应的 资源类对象.
         						(Pipeline工程下的Importer, Processor, Writer, 和Resource工程下的Reader)
3. 添加了 [MContentManager] 类, 	用于读取和存储资源类。
         						(存 TextureBase 类型，读取时会自动读取 Json 和对应 Texture2D 对象)
4. 完善了资源类, 即 [TextureBase] 等类.
5. 添加了 贴图Json文件 的模板.



[Feature] 004.20220430: 完成 Camera 移动和缩放功能
---------------------------------------------------------------------------------------------------------------------------------
1. 添加了 [Camera] 类, 	对应地修改了 [Sprite] 等类 的Draw方法,
              			现在会根据 Camera 的属性, 修改对象在屏幕上 「绘制的相对位置」 , 且添加了 Camera 整体的 「缩放」 功能.
2. 添加了 [Utility] 类，	将旧版工程中的 DrawLine() 函数 添加进去了.

3. 给 [TObject] 类，添加了 测试用的移动代码.

4. 添加了 [TextureWriter] & [TextureReader] 类, 分别作为 TextureMono/Set 的 Writer & Reader的基类,
   TextureBase 的属性会放在 TextureWriter/Reader 内, TextureMono/Set 的 Writer/Reader 会放各自独特的属性.



[Feature] 005.20220430: 完成 「动画播放」 功能, 完成对 「管道扩展」 的测试
---------------------------------------------------------------------------------------------------------------------------------
1. 完善了 [Pipeline Extension] 类, 	现在可以正常地读取 Json文件 并转化为对应 Texture 对象.
2. 完善了 [SpriteAnimation] 类, 		现在可以使用该类来 绘制 「动画贴图」.

-Test-
1. 改进了 测试移动程序, 现在 「缩放倍率」 有上下限, 缩放速度是按 「乘算」 而非 加算.
   将 MainGame 中的 绘制文本 (帧率等信息), 移动到了 MGame.Draw(..) 中,
   并添加了 按下 「Alt」 或 「Camera操作键时」, 在Camera中心点 (即屏幕中心点) 绘制 「十字标识」 , 且 「绘制Camera信息文本」 的效果

-Fixed-
1. 修复了问题: 	[Utility] 类 中的 DrawLineX/Y(..) 方法无法缩放,
   				现在能够正常配合 Camera.Scale 缩放长度.



[Feature] 006.20220503: 完成UI贴图绘制, 开始设计鼠标交互功能
---------------------------------------------------------------------------------------------------------------------------------
1. 完成了 UI贴图的 「位置计算」 和 「绘制」 功能.
2. 开始编写 鼠标和UI交互 的程序.

-Fixed-
1. 修复了问题: 贴图 Origin 位置计算时, Texture2D 的 Size / 2 被 TextureBase 和 Sprite 「重复添加两次」



[Feature] 007.20220505: 完成图层绘制排序系统
---------------------------------------------------------------------------------------------------------------------------------
1. 完成了 「图层系统」 的排序和绘制功能.

-Fixed-
1. 修复了问题: 	[TextureBase] 资源类的 BasicScale 缩放属性 「没有初始化」, 导致缩放率为 0, 无法显示贴图.
2! 修复了问题: 	SpriteBatch.Begin(..) 中 SortMode 为 BackToFront 时, 绘制图层错乱的问题,
   				现在将恢复默认 Deferred, 直接通过 LayerManager 排序绘制.  [具体问题仍待探讨]


